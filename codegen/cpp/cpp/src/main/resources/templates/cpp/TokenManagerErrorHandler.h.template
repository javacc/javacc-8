\#ifndef JAVACC_TOKEN_MANAGER_ERROR_HANDLER_H
\#define JAVACC_TOKEN_MANAGER_ERROR_HANDLER_H

#if BUILD_TOKEN_MANAGER
\#include "JavaCC.h"
\#include "Token.h"

namespace JavaCC {

class TokenManagerErrorHandler {
public:
		   TokenManagerErrorHandler() : error_count(0) {}
  virtual ~TokenManagerErrorHandler() {}
    
public:
  // Returns a detailed message for the Error when it is thrown by the
  // token manager to indicate a lexical error.
  // Parameters :
  //    EOFSeen     : indicates if EOF caused the lexical error
  //    curLexState : lexical state in which this error occurred
  //    errorLine   : line number when the error occurred
  //    errorColumn : column number when the error occurred
  //    errorAfter  : prefix that was seen before this error occurred
  //    curchar     : the offending character
  //
  virtual void lexicalError(bool EOFSeen, int lexState, int errorLine, int errorColumn, JJString errorAfter, JJChar curChar) = 0;
  virtual void lexicalError(const JJString& errorMessage) = 0;
  		  int  getErrorCount() const { return error_count; }

protected:
  int error_count;
};

}
using JavaCC::TokenManagerErrorHandler;
#fi

\#endif
