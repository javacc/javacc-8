options {
SANITY_CHECK=false;
DEBUG_PARSER=true;
DEBUG_TOKEN_MANAGER=false;
DEBUG_LOOKAHEAD=true;
STATIC=false;
NO_DFA=false;
}
PARSER_BEGIN(Bug)
PARSER_END(Bug)

TOKEN_MGR_DECLS :
{
  int braceCount = 0;
  int bracketCount = 0;
  int parenthesisCount = 0;
  int stringSize;
  int linesCommentCount = 0;
}


SKIP:{" "|"\t"|"\n"|"\r"|"\f"}
SKIP:{"/*"{linesCommentCount=1;}:LinesComment}
<LinesComment>SKIP:{"/*"{linesCommentCount+=1;}}
<LinesComment>SKIP:{"*/"{linesCommentCount-=1;SwitchTo(linesCommentCount==0?DEFAULT:LinesComment);}}
<LinesComment>SKIP:{<~[]>}

TOKEN:
{ <#NA:~["-","\r","\n"]>
| <#EOL:("\n"|"\r"|"\r\n")>
}

SPECIAL_TOKEN:{"--":LineComment}
<LineComment>SPECIAL_TOKEN:{<(<NA>|"-"<NA>)*(<EOL>|"-"<EOL>|"-""-")?>:DEFAULT}

TOKEN:
{<DBLLBRACKET:"[[">
|<CTAG:"/>">
|<ETAG:"</">
|<LBRACKET:"[">
|<RBRACKET:"]">
|<LBRACE:"{">
|<RBRACE:"}">
|<LPAREN:"(">
|<RPAREN:")">
|<CIRCONFLEX:"^">
|<VERTICAL:"|">
|<COMMA:",">
|<LESS:"<">
|<GREATER:">">
|<ASSIGN:"::=">
|<EXCLAMATION:"!">
|<AMPERSAND:"&">
|<ASTERISK:"*">
|<SLASH:"/">
|<HYPHEN:"-">
|<COLON:":">
|<SEMICOLON:";">
|<DOT:".">
|<DOTDOT:"..">
|<DOTDOTDOT:"...">
|<ARROBASE:"@">
|<ARROBASEDOT:"@.">
}

TOKEN:
{
<ABSENT:"ABSENT">
|<ABSTRACT_SYNTAX:"ABSTRACT-SYNTAX">
|<ACCESS:"ACCESS">
|<ALL:"ALL">
|<ANY:"ANY">
|<APPLICATION:"APPLICATION">
|<AUTOMATIC:"AUTOMATIC">
|<BEGIN:"BEGIN">
|<BIT:"BIT">
|<BOOLEAN:"BOOLEAN">
|<BY:"BY">
|<CHARACTER:"CHARACTER">
|<CHOICE:"CHOICE">
|<CLASS:"CLASS">
|<COMPONENT:"COMPONENT">
|<CONTAINING:"CONTAINING">
|<CONSTRAINED:"CONSTRAINED">
|<COMPONENTS:"COMPONENTS">
|<DATE:"DATE">
|<DATE_TIME:"DATE-TIME">
|<DEFAULT_:"DEFAULT">
|<DEFINED:"DEFINED">
|<DEFINITIONS:"DEFINITIONS">
|<DESCRIPTION:"DESCRIPTION">
|<DURATION:"DURATION">
|<EMBEDDED:"EMBEDDED">
|<ENCODED:"ENCODED">
|<END:"END">
|<ENUMERATED:"ENUMERATED">
|<EXCEPT:"EXCEPT">
|<EXPLICIT:"EXPLICIT">
|<EXPORTS:"EXPORTS">
|<EXTENSIBILITY:"EXTENSIBILITY">
|<EXTERNAL:"EXTERNAL">
|<FROM:"FROM">
|<IDENTIFIER:"IDENTIFIER">
|<IMPLICIT:"IMPLICIT">
|<IMPLIED:"IMPLIED">
|<IMPORTS:"IMPORTS">
|<INCLUDES:"INCLUDES">
|<INSTANCE:"INSTANCE">
|<INSTRUCTIONS:"INSTRUCTIONS">
|<INTEGER:"INTEGER">
|<INTERSECTION:"INTERSECTION">
|<MACRO:"MACRO">
|<MAX:"MAX">
|<MIN:"MIN">
|<MINUS_INFINITY:"MINUS-INFINITY">
|<NULLL:"NULL">
|<OBJECT_TYPE:"OBJECT-TYPE">
|<OBJECT:"OBJECT">
|<OID_IRI:"OID-IRI">
|<OCTET:"OCTET">
|<OF:"OF">
|<OPTIONAL:"OPTIONAL">
|<PATTERN:"PATTERN">
|<PDV:"PDV">
|<PLUS_INFINITY:"PLUS-INFINITY">
|<PRESENT:"PRESENT">
|<PRIVATE:"PRIVATE">
|<REAL:"REAL">
|<RELATIVE_OID:"RELATIVE-OID">
|<RELATIVE_OID_IRI:"RELATIVE-OID-IRI">
|<SEQUENCE:"SEQUENCE">
|<SET:"SET">
|<SETTINGS:"SETTINGS">
|<SIZE:"SIZE">
|<STATUS:"STATUS">
|<STRING:"STRING">
|<SYNTAX:"SYNTAX">
|<TAGS:"TAGS">
|<TIME:"TIME">
|<TIME_OF_DAY:"TIME-OF-DAY">
|<TYPE_IDENTIFIER:"TYPE-IDENTIFIER">
|<UNION:"UNION">
|<UNIQUE:"UNIQUE">
|<UNIVERSAL:"UNIVERSAL">
|<WITH:"WITH">
|<BMPString:"BMPString">
|<GeneralString:"GeneralString">
|<GraphicString:"GraphicString">
|<IA5String:"IA5String">
|<ISO646String:"ISO646String">
|<NumericString:"NumericString">
|<PrintableString:"PrintableString">
|<TeletexString:"TeletexString">
|<T61String:"T61String">
|<UniversalString:"UniversalString">
|<UTF8String:"UTF8String">
|<VideotexString:"VideotexString">
|<VisibleString:"VisibleString">
|<LOWERTRUE:"true">
|<LOWERFALSE:"false">
|<UPPERTRUE:"TRUE">
|<UPPERFALSE:"FALSE">
|<GeneralizedTime:"GeneralizedTime">
|<UTCTime:"UTCTime">
|<ObjectDescriptor:"ObjectDescriptor">
}

TOKEN:
{
<#UPPER:["A"-"Z"]>
|<#LOWER:["a"-"z"]>
|<#DIGIT:["0"-"9"]>
|<#QUOTE:"\"">
|<#DOUBLEDQUOTE:"\"\"">
|<BSTRING:"'"(["0"-"1"])*"'B">
|<HSTRING:"'"(<DIGIT>|["A"-"F"]|["a"-"f"])*"'H">
|<CSTRING:<QUOTE>(~["\""]|<DOUBLEDQUOTE>)*<QUOTE>>
|<NUMBER:("0"|["1"-"9"](<DIGIT>)*)>
|<FLOAT:<NUMBER>"."<NUMBER>>
|<#LOWERCASEFIRSTREF:"&"<LOWERCASEFIRST>>
|<#UPPERCASEFIRSTREF:"&"<UPPERCASEFIRST>>
|<#UPPERCASEDIGIT:<UPPER>("-"(<UPPER>|<DIGIT>)|(<UPPER>|<DIGIT>))*>
|<#LOWERCASEFIRST:<LOWER>("-"(<LOWER>|<UPPER>|<DIGIT>)|(<LOWER>|<UPPER>|<DIGIT>))*>
|<#UPPERCASEFIRST:<UPPER>("-"(<LOWER>|<UPPER>|<DIGIT>)|(<LOWER>|<UPPER>|<DIGIT>))*>
}

TOKEN:{
<WOULDBE_OBJECTCLASSREFERENCE:<UPPERCASEDIGIT>>
|<OBJECTCLASSREFERENCE:<UPPERCASEDIGIT>>
|<TYPEREFERENCE:<UPPERCASEFIRST>>
|<IDENTIFIANT:<LOWERCASEFIRST>>
|<VALUEREFERENCE:<LOWERCASEFIRST>>
|<MODULEREFERENCE:<UPPERCASEFIRST>>
|<FIELDREFERENCE:<LOWERCASEFIRSTREF>>
|<FIELDSETREFERENCE:<UPPERCASEFIRSTREF>>
|<WORD:<LOWERCASEFIRST>>
|<OBJECTREFERENCE:<LOWERCASEFIRST>>
|<OBJECTSETREFERENCE:<TYPEREFERENCE>>
|<PARAMETERIZEDTYPEREFERENCE:<TYPEREFERENCE>>
|<PARAMETERIZEDOBJECTCLASSREFERENCE:<UPPERCASEDIGIT>>
|<PARAMETERIZEDVALUEREFERENCE:<LOWERCASEFIRST>>
|<PARAMETERIZEDOBJECTREFERENCE:<LOWERCASEFIRST>>
|<PARAMETERIZEDOBJECTSETREFERENCE:<TYPEREFERENCE>>
|<PARAMETERIZEDVALUESETTYPEREFERENCE:<UPPERCASEFIRST>>
|<FIXEDTYPEVALUEFIELDREFERENCE:<LOWERCASEFIRSTREF>>
|<VARIABLETYPEVALUEFIELDREFERENCE:<LOWERCASEFIRSTREF>>
|<OBJECTFIELDREFERENCE:<LOWERCASEFIRSTREF>>
|<TYPEFIELDREFERENCE:<UPPERCASEFIRSTREF>>
|<OBJECTSETFIELDREFERENCE:<UPPERCASEFIRSTREF>>
|<FIXEDTYPEVALUESETFIELDREFERENCE:<UPPERCASEFIRSTREF>>
|<VARIABLETYPEVALUESETFIELDREFERENCE:<UPPERCASEFIRSTREF>>
}


void EnumerationItem()  	: {  } 
{ 
	<LBRACE>
	( LOOKAHEAD(2)
      NamedNumber()
	| identifier()
	)
	<RBRACE>
}
void NamedNumber() : 
{ }
{
    ( identifier() | valuereference() )
    <LPAREN> <RPAREN>
	
}
void identifier() 						: {} { <IDENTIFIANT>}
void valuereference() 					: {} { <VALUEREFERENCE> }

