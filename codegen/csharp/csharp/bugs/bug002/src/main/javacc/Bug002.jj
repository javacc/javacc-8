options {
SANITY_CHECK=false;
DEBUG_PARSER=true;
DEBUG_TOKEN_MANAGER=false;
DEBUG_LOOKAHEAD=true;
STATIC=false;
NO_DFA=false;
}
PARSER_BEGIN(Bug)
PARSER_END(Bug)

TOKEN_MGR_DECLS :
{
  int braceCount = 0;
  int bracketCount = 0;
  int parenthesisCount = 0;
  int stringSize;
  int linesCommentCount = 0;
}


SKIP:{" "|"\t"|"\n"|"\r"|"\f"}
SKIP:{"/*"{linesCommentCount=1;}:LinesComment}
<LinesComment>SKIP:{"/*"{linesCommentCount+=1;}}
<LinesComment>SKIP:{"*/"{linesCommentCount-=1;SwitchTo(linesCommentCount==0?DEFAULT:LinesComment);}}
<LinesComment>SKIP:{<~[]>}

TOKEN:
{ <#NA:~["-","\r","\n"]>
| <#EOL:("\n"|"\r"|"\r\n")>
}

SPECIAL_TOKEN:{"--":LineComment}
<LineComment>SPECIAL_TOKEN:{<(<NA>|"-"<NA>)*(<EOL>|"-"<EOL>|"-""-")?>:DEFAULT}

TOKEN:
{<LBRACKET:"[">
|<RBRACKET:"]">
|<LBRACE:"{">
|<RBRACE:"}">
|<LPAREN:"(">
|<RPAREN:")">
}


TOKEN:
{
<#UPPER:["A"-"Z"]>
|<#LOWER:["a"-"z"]>
|<#DIGIT:["0"-"9"]>
|<#QUOTE:"\"">
|<#DOUBLEDQUOTE:"\"\"">
|<BSTRING:"'"(["0"-"1"])*"'B">
|<HSTRING:"'"(<DIGIT>|["A"-"F"]|["a"-"f"])*"'H">
|<CSTRING:<QUOTE>(~["\""]|<DOUBLEDQUOTE>)*<QUOTE>>
|<NUMBER:("0"|["1"-"9"](<DIGIT>)*)>
|<FLOAT:<NUMBER>"."<NUMBER>>
|<#LOWERCASEFIRSTREF:"&"<LOWERCASEFIRST>>
|<#UPPERCASEFIRSTREF:"&"<UPPERCASEFIRST>>
|<#UPPERCASEDIGIT:<UPPER>("-"(<UPPER>|<DIGIT>)|(<UPPER>|<DIGIT>))*>
|<#LOWERCASEFIRST:<LOWER>("-"(<LOWER>|<UPPER>|<DIGIT>)|(<LOWER>|<UPPER>|<DIGIT>))*>
|<#UPPERCASEFIRST:<UPPER>("-"(<LOWER>|<UPPER>|<DIGIT>)|(<LOWER>|<UPPER>|<DIGIT>))*>
}

TOKEN:{
 <IDENTIFIANT:<LOWERCASEFIRST>>
|<VALUEREFERENCE:<LOWERCASEFIRST>>
}


void EnumerationItem()  	: {  } 
{ 
	<LBRACE>
	( LOOKAHEAD(2)
      NamedNumber()
	| identifier()
	)
	<RBRACE>
}
void NamedNumber() : 
{ }
{
    ( identifier() | valuereference() )
    <LPAREN> <RPAREN>
	
}
void identifier() 						: {} { <IDENTIFIANT>}
void valuereference() 					: {} { <VALUEREFERENCE> }

